#!/bin/bash
python ./scripts/announce_update.py
python ./scripts/member_update.py
python ./scripts/publication_update.py
push ()
{
  git add . && git commit -m $1 && git push origin main  
}

# Note that we use "$@" to let each command-line parameter expand to a
# separate word. The quotes around "$@" are essential!
# We need TEMP as the 'eval set --' would nuke the return value of getopt.
TEMP=$(getopt -o 'm:' --long 'message:' -n 'update' -- "$@")
if [ $? -ne 0 ]; then
	echo 'Terminating...' >&2
	exit 1
fi

# Note the quotes around "$TEMP": they are essential!
eval set -- "$TEMP"
unset TEMP
while true; do
	case "$1" in
		'-m'|'--message')
			push $2
			shift 2 
			continue
		;;
		'--')
			shift
			break
		;;
		*)
			echo 'Internal error!' >&2
			exit 1
		;;
	esac
done


# push $1
